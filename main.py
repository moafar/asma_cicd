import os
from io import BytesIO
from google.cloud import storage
from google.cloud import bigquery
from flask import Flask, request, jsonify
import requests
import pandas as pd
import logging

# Configurar logging
logging.basicConfig(
    level=logging.INFO,  # Cambia a DEBUG para m√°s detalles
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def descargar_archivo(url):
    """Descarga un archivo desde una URL y lo retorna como BytesIO."""
    response = requests.get(url)
    if response.status_code == 200:
        return BytesIO(response.content)
    else:
        raise ValueError(f"Error al descargar el archivo: {response.status_code}")

def procesar_archivo(file_bytes):
    """Procesa el archivo Excel y retorna un DataFrame."""
    columnas = [
        'tipo_documento', 'documento', 'primer_nombre', 'segundo_nombre', 'primer_apellido', 'segundo_apellido', 'codigo_interno_paciente', 'medico_tratante', 'lugar_residencia', 'sede', 'genero', 'fecha_nacimiento', 'edad', 'rango_edad', 'eps', 'fecha_ingreso_programa', 'mes_ruta', 'estado', 'diagnostico_previo_asma', 'fecha_espirometria_inicial', 'peso_kg', 'talla_cm', 'cvf_pre_l', 'vef1pre_l', 'cvf_post_l_2', 'vef1post_l', 'vef1post_por', 'respuesta_broncodilatador_1', 'oscilometria', 'fecha_oscilometria', 'interpretacion_oscilometria_inicial', 'respuesta_broncodilatador_2', 'feno', 'fecha_feno', 'resultado_feno', 'prueba_broncoprovocacion', 'fecha_prueba_broncoprobocacion', 'interpretacion_p_broncoprovocacion', 'calidad_vida_inicio', 'interpretacion_calidad_vida', 'tai', 'interpretacion_tai', 'act', 'interpretacion_act', 'acq', 'interpretacion_acq', 'exacerbaciones_previas_ingreso_programa', 'manejo_exacerbacion_casa', 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso', 'manejo_exacerbacion_hospitalizacion_12meses_ingreso', 'manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso', 'manejo_exacerbaciones_corticosteroides_12meses_ingreso', 'paciente_sospecha_asma_alergica', 'fecha_valoracion_alergologia', 'fecha_prick_test', 'resultado_prick_test', 'primer_corticoide_inhalado', 'primer_corticoide_inhalado3', 'primer_gci_laba', 'gci_laba', 'primer_saba', 'saba', 'primer_lama', 'lama', 'uso_terapia_biologica', 'terapia_biologica', 'fecha_junta_asma_para_formulacion', 'fecha_inicio_terapia_biologica', 'alerta_seguimiento_mes_6', 'alerta_seguimiento_mes_12', 'paciente_eventos_adversos', 'fecha_ultimo_evento_adverso', 'fecha_entrega_plan_accion', 'fecha_entrega_educacion_tics_1_mes', 'fecha_seguimiento_mes_1', 'fecha_entrega_educacion_tics_2_mes', 'fecha_seguimiento_mes_2', 'fecha_entrega_educacion_tics_3_mes', 'fecha_seguimiento_mes_3', 'tai_3_meses', 'interpretacion_tai_3', 'act_3_meses', 'interpretacion_act_3', 'acq_3_meses', 'interpretacion_acq_3', 'paciente_exacerbaciones_primer_trimestre', 'manejo_exacerbacion_casa_3meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_3meses', 'manejo_exacerbacion_hospitalizacion_3meses', 'manejo_exacerbacion_hospitalizacion_uci_3meses', 'manejo_exacerbaciones_corticosteroides_3meses', 'cantidad_citas_prioritarias_fase_1', 'junta_asma_fase_1', 'fecha_real_cita_neumologia_3_meses', 'confirmacion_diagnostica', 'fecha_confirmacion_diagnostica', 'fecha_estudio_diagnostico_previo', 'soporte_prueba_diagnostico', 'paciente_inicia_rehabilitacion_pulmonar', 'modalidad_atencion_rehabilitacion_pulmonar', 'caminata_6_minutos_inicial', 'grupo_riesgo', 'fecha_valoracion_nutricion', 'requiere_seguimiento_nutricion', 'fecha_seguimiento_nutricion', 'fecha_valoracion_psicologia', 'requiere_seguimiento_psicologia', 'fecha_seguimiento_psicologia', 'fecha_entrega_educacion_tics_4mes', 'fecha_entrega_educacion_tics_5mes', 'fecha_entrega_educacion_tics_6mes', 'fecha_seguimiento_mes_6', 'tai_6_meses', 'interpretacion_tai_6', 'act_6_meses', 'interpretacion_act_6', 'acq_6_meses', 'interpretacion_acq_6', 'paciente_exacerbaciones_segundo_trimestre_6meses)', 'manejo_exacerbacion_casa_cantidad_6meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_6meses', 'manejo_exacerbacion_hospitalizacion_6meses', 'manejo_exacerbacion_hospitalizacion_uci_6meses', 'manejo_exacerbaciones_corticosteroides_6meses', 'fecha_real_cita_neumologia_6_meses', 'fecha_entrega_educacion_tics_7_mes', 'fecha_entrega_educacion_tics_8_mes', 'fecha_entrega_educacion_tics_9_mes', 'fecha_seguimiento_mes_9', 'tai_9_meses', 'interpretacion_tai_9', 'act_9_meses', 'interpretacion_act_9', 'acq_9_meses', 'interpretacion_acq_9', 'paciente_exacerbaciones_tercer_trimestre_9meses', 'manejo_exacerbacion_casa_9meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_9meses', 'manejo_exacerbacion_hospitalizacion_9meses', 'manejo_exacerbacion_hospitalizacion_uci_9meses', 'manejo_exacerbaciones_corticosteroides_9meses', 'fecha_real_cita_neumologia_9_meses', 'fecha_entrega_educacion_tics_10_mes', 'fecha_entrega_educacion_tics_11_mes', 'fecha_entrega_educacion_tics_12_mes', 'fecha_seguimiento_mes_12_fisioterapia_control', 'cantidad_valoraciones_alergologia_fase_seguimiento', 'calidad_vida_12_meses', 'interpretacion_calidad_vida_final', 'tai_12_meses', 'interpretacion_tai_12', 'act_12_meses', 'interpretacion_act_12', 'acq_12_meses', 'interpretacion_acq_12', 'paciente_exacerbaciones_cuarto_trimestre_12meses', 'manejo_exacerbacion_casa_12meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses', 'manejo_exacerbacion_hospitalizacion_12meses', 'manejo_exacerbacion_hospitalizacion_uci_12meses', 'manejo_exacerbaciones_corticosteroides_12meses', 'cantidad_citas_prioritarias_fase_2', 'junta_asma_fase_2', 'fecha_espirometria_final', 'peso_kg_2', 'talla_cm_2', 'segundo_cvf_pre_l', 'segundo_vef1pre_l', 'segundo_cvf_post_l', 'segundo_vef1post_l', 'segundo_vef1post_por', 'segundo_oscilometria', 'interpretacion_oscilometria', 'fecha_real_cita_neumologia_12_meses', 'paciente_exacerbaciones_cuarto_trimestre_mas_12meses', 'manejo_exacerbacion_casa_mas_12meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses', 'manejo_exacerbacion_hospitalizacion_mas_12meses', 'manejo_exacerbacion_hospitalizacion_uci_mas_12meses', 'manejo_exacerbaciones_corticosteroides_mas_12meses', 'paciente_finalizo_rehabilitacion_pulmonar', 'modalidad_atencion_rehabilitacion_pulmonar_finalizar', 'caminata_6_minutos_final', 'cambios_alcanzados_c6m', 'fecha_entrega_educacion_tics_13_mes', 'fecha_entrega_educacion_tics_14_mes', 'fecha_entrega_educacion_tics_15_mes', 'fecha_real_cita_neumologia_15_meses', 'fecha_entrega_educacion_tics_16_mes', 'fecha_entrega_educacion_tics_17_mes', 'fecha_entrega_educacion_tics_18_mes', 'fecha_real_cita_neumologia_18_meses', 'fecha_seguimiento_mes_18_fisioterapia_control', 'n_entregas_educacion_tics', 'entregas_educacion_tics_completas', 'paciente_egreso_temprano', 'fecha_egreso_temprano', 'egreso', 'fecha_egreso', 'motivo_egreso', 'observaciones_gestora' 
    ] 

    types = { 
        'tipo_documento':str, 'documento':str, 'primer_nombre':str, 'segundo_nombre':str, 'primer_apellido':str, 'segundo_apellido':str, 'codigo_interno_paciente':str, 'medico_tratante':str, 'lugar_residencia':str, 'sede':str, 'genero':str, 'fecha_nacimiento':str, 'edad':float, 'rango_edad':str, 'eps':str, 'fecha_ingreso_programa':str, 'mes_ruta':int, 'estado':str, 'diagnostico_previo_asma':str, 'fecha_espirometria_inicial':str, 'peso_kg':str, 'talla_cm':str, 'cvf_pre_l':str, 'vef1pre_l':str, 'cvf_post_l_2':str, 'vef1post_l':str, 'vef1post_por':str, 'respuesta_broncodilatador_1':str, 'oscilometria':str, 'fecha_oscilometria':str, 'interpretacion_oscilometria_inicial':str, 'respuesta_broncodilatador_2':str, 'feno':str, 'fecha_feno':str, 'resultado_feno':str, 'prueba_broncoprovocacion':str, 'fecha_prueba_broncoprobocacion':str, 'interpretacion_p_broncoprovocacion':str, 'calidad_vida_inicio':str, 'interpretacion_calidad_vida':str, 'tai':str, 'interpretacion_tai':str, 'act':str, 'interpretacion_act':str, 'acq':str, 'interpretacion_acq':str, 'exacerbaciones_previas_ingreso_programa':str, 'manejo_exacerbacion_casa':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso':str, 'manejo_exacerbacion_hospitalizacion_12meses_ingreso':str, 'manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso':str, 'manejo_exacerbaciones_corticosteroides_12meses_ingreso':str, 'paciente_sospecha_asma_alergica':str, 'fecha_valoracion_alergologia':str, 'fecha_prick_test':str, 'resultado_prick_test':str, 'primer_corticoide_inhalado':str, 'primer_corticoide_inhalado3':str, 'primer_gci_laba':str, 'gci_laba':str, 'primer_saba':str, 'saba':str, 'primer_lama':str, 'lama':str, 'uso_terapia_biologica':str, 'terapia_biologica':str, 'fecha_junta_asma_para_formulacion':str, 'fecha_inicio_terapia_biologica':str, 'alerta_seguimiento_mes_6':str, 'alerta_seguimiento_mes_12':str, 'paciente_eventos_adversos':str, 'fecha_ultimo_evento_adverso':str, 'fecha_entrega_plan_accion':str, 'fecha_entrega_educacion_tics_1_mes':str, 'fecha_seguimiento_mes_1':str, 'fecha_entrega_educacion_tics_2_mes':str, 'fecha_seguimiento_mes_2':str, 'fecha_entrega_educacion_tics_3_mes':str, 'fecha_seguimiento_mes_3':str, 'tai_3_meses':str, 'interpretacion_tai_3':str, 'act_3_meses':str, 'interpretacion_act_3':str, 'acq_3_meses':str, 'interpretacion_acq_3':str, 'paciente_exacerbaciones_primer_trimestre':str, 'manejo_exacerbacion_casa_3meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_3meses':str, 'manejo_exacerbacion_hospitalizacion_3meses':str, 'manejo_exacerbacion_hospitalizacion_uci_3meses':str, 'manejo_exacerbaciones_corticosteroides_3meses':str, 'cantidad_citas_prioritarias_fase_1':str, 'junta_asma_fase_1':str, 'fecha_real_cita_neumologia_3_meses':str, 'confirmacion_diagnostica':str, 'fecha_confirmacion_diagnostica':str, 'fecha_estudio_diagnostico_previo':str, 'soporte_prueba_diagnostico':str, 'paciente_inicia_rehabilitacion_pulmonar':str, 'modalidad_atencion_rehabilitacion_pulmonar':str, 'caminata_6_minutos_inicial':str, 'grupo_riesgo':str, 'fecha_valoracion_nutricion':str, 'requiere_seguimiento_nutricion':str, 'fecha_seguimiento_nutricion':str, 'fecha_valoracion_psicologia':str, 'requiere_seguimiento_psicologia':str, 'fecha_seguimiento_psicologia':str, 'fecha_entrega_educacion_tics_4mes':str, 'fecha_entrega_educacion_tics_5mes':str, 'fecha_entrega_educacion_tics_6mes':str, 'fecha_seguimiento_mes_6':str, 'tai_6_meses':str, 'interpretacion_tai_6':str, 'act_6_meses':str, 'interpretacion_act_6':str, 'acq_6_meses':str, 'interpretacion_acq_6':str, 'paciente_exacerbaciones_segundo_trimestre_6meses':str, 'manejo_exacerbacion_casa_cantidad_6meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_6meses':str, 'manejo_exacerbacion_hospitalizacion_6meses':str, 'manejo_exacerbacion_hospitalizacion_uci_6meses':str, 'manejo_exacerbaciones_corticosteroides_6meses':str, 'fecha_real_cita_neumologia_6_meses':str, 'fecha_entrega_educacion_tics_7_mes':str, 'fecha_entrega_educacion_tics_8_mes':str, 'fecha_entrega_educacion_tics_9_mes':str, 'fecha_seguimiento_mes_9':str, 'tai_9_meses':str, 'interpretacion_tai_9':str, 'act_9_meses':str, 'interpretacion_act_9':str, 'acq_9_meses':str, 'interpretacion_acq_9':str, 'paciente_exacerbaciones_tercer_trimestre_9meses':str, 'manejo_exacerbacion_casa_9meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_9meses':str, 'manejo_exacerbacion_hospitalizacion_9meses':str, 'manejo_exacerbacion_hospitalizacion_uci_9meses':str, 'manejo_exacerbaciones_corticosteroides_9meses':str, 'fecha_real_cita_neumologia_9_meses':str, 'fecha_entrega_educacion_tics_10_mes':str, 'fecha_entrega_educacion_tics_11_mes':str, 'fecha_entrega_educacion_tics_12_mes':str, 'fecha_seguimiento_mes_12_fisioterapia_control':str, 'cantidad_valoraciones_alergologia_fase_seguimiento':str, 'calidad_vida_12_meses':str, 'interpretacion_calidad_vida_final':str, 'tai_12_meses':str, 'interpretacion_tai_12':str, 'act_12_meses':str, 'interpretacion_act_12':str, 'acq_12_meses':str, 'interpretacion_acq_12':str, 'paciente_exacerbaciones_cuarto_trimestre_12meses':str, 'manejo_exacerbacion_casa_12meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses':str, 'manejo_exacerbacion_hospitalizacion_12meses':str, 'manejo_exacerbacion_hospitalizacion_uci_12meses':str, 'manejo_exacerbaciones_corticosteroides_12meses':str, 'cantidad_citas_prioritarias_fase_2':str, 'junta_asma_fase_2':str, 'fecha_espirometria_final':str, 'peso_kg_2':str, 'talla_cm_2':str, 'segundo_cvf_pre_l':str, 'segundo_vef1pre_l':str, 'segundo_cvf_post_l':str, 'segundo_vef1post_l':str, 'segundo_vef1post_por':str, 'segundo_oscilometria':str, 'interpretacion_oscilometria':str, 'fecha_real_cita_neumologia_12_meses':str, 'paciente_exacerbaciones_cuarto_trimestre_mas_12meses':str, 'manejo_exacerbacion_casa_mas_12meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses':str, 'manejo_exacerbacion_hospitalizacion_mas_12meses':str, 'manejo_exacerbacion_hospitalizacion_uci_mas_12meses':str, 'manejo_exacerbaciones_corticosteroides_mas_12meses':str, 'paciente_finalizo_rehabilitacion_pulmonar':str, 'modalidad_atencion_rehabilitacion_pulmonar_finalizar':str, 'caminata_6_minutos_final':str, 'cambios_alcanzados_c6m':str, 'fecha_entrega_educacion_tics_13_mes':str, 'fecha_entrega_educacion_tics_14_mes':str, 'fecha_entrega_educacion_tics_15_mes':str, 'fecha_real_cita_neumologia_15_meses':str, 'fecha_entrega_educacion_tics_16_mes':str, 'fecha_entrega_educacion_tics_17_mes':str, 'fecha_entrega_educacion_tics_18_mes':str, 'fecha_real_cita_neumologia_18_meses':str, 'fecha_seguimiento_mes_18_fisioterapia_control':str, 'n_entregas_educacion_tics':str, 'entregas_educacion_tics_completas':str, 'paciente_egreso_temprano':str, 'fecha_egreso_temprano':str, 'egreso':str, 'fecha_egreso':str, 'motivo_egreso':str, 'observaciones_gestora':str
    }

    df = pd.read_excel(
        file_bytes, sheet_name="BASE ASMA", header=6, names=columnas, dtype=types
    )

    return df

# Validaci√≥n y transformaci√≥n a DATETIME
def validar_transformar_datetime(df, variables):
    """
    Valida y transforma columnas de un DataFrame a datetime, reemplazando valores no v√°lidos con una fecha comod√≠n.

    Args:
        df (pd.DataFrame): El DataFrame a validar.
        variables (list): Lista de nombres de las columnas a validar y transformar.

    Returns:
        dict: Diccionario con las listas de variables no encontradas, transformadas exitosamente y no transformadas.
    """
    no_encontradas = []
    transformadas = []
    no_transformadas = []
    fecha_comodin = pd.to_datetime('01/01/1801')

    for variable in variables:
        if variable not in df.columns:
            no_encontradas.append(variable)
            logger.warning(f"La columna {variable} no se encuentra en el DataFrame.")
        else:
            try:
                df[variable] = pd.to_datetime(df[variable], errors='coerce')
                df[variable] = df[variable].fillna(fecha_comodin)
                transformadas.append(variable)
                logger.info(f"Columna {variable} transformada correctamente.")
            except ValueError as e:
                logger.error(f"Error de conversi√≥n en la columna {variable}: {e}")
                no_transformadas.append(variable)
            except Exception as e:
                logger.error(f"Error inesperado en la columna {variable}: {e}")
                no_transformadas.append(variable)

    resultado = {
        "no_encontradas": no_encontradas,
        "transformadas": transformadas,
        "no_transformadas": no_transformadas
    }
    logger.info(f"Resultado de la validaci√≥n y transformaci√≥n: {resultado}")
    return resultado

# Validaci√≥n y transformaci√≥n a INTEGER
def validar_transformar_int(df, variables):
    """
    Valida y transforma columnas en un DataFrame a enteros, reemplazando valores no v√°lidos con un valor predeterminado (-9999).

    Args:
        df (pd.DataFrame): DataFrame a validar y transformar.
        variables (list): Lista de nombres de las columnas a validar y transformar.

    Returns:
        dict: Diccionario con las listas de variables no encontradas, transformadas exitosamente y no transformadas.
    """
    # Inicializar listas de resultados
    variables_no_encontradas = []
    variables_transformadas = []
    variables_no_transformadas = []

    # Valor predeterminado para valores no v√°lidos
    valor_comodin = -9999

    for var in variables:
        if var not in df.columns:
            variables_no_encontradas.append(var)
            logger.warning(f"La columna '{var}' no se encuentra en el DataFrame.")
        else:
            try:
                # Transformar a num√©rico, valores no v√°lidos a -9999, y convertir a int
                df[var] = pd.to_numeric(df[var], errors='coerce').fillna(valor_comodin).astype(int)
                variables_transformadas.append(var)
                logger.info(f"Columna '{var}' transformada exitosamente a enteros.")
            except Exception as e:
                variables_no_transformadas.append(var)
                logger.error(f"Error al transformar la columna '{var}' a enteros: {e}")

    # Crear el resultado
    resultado = {
        "no_encontradas": variables_no_encontradas,
        "transformadas": variables_transformadas,
        "no_transformadas": variables_no_transformadas
    }
    logger.info(f"Resultado de la validaci√≥n y transformaci√≥n de enteros: {resultado}")
    return resultado

# Validaci√≥n y transformaci√≥n a FLOAT
def validar_transformar_float(df, variables):
    """
    Valida y transforma columnas en un DataFrame a tipo float, reemplazando valores no v√°lidos con un valor predeterminado (-9999.0).

    Args:
        df (pd.DataFrame): DataFrame a validar y transformar.
        variables (list): Lista de nombres de las columnas a validar y transformar.

    Returns:
        dict: Diccionario con las listas de variables no encontradas, transformadas exitosamente y no transformadas.
    """
    # Inicializar listas de resultados
    variables_no_encontradas = []
    variables_transformadas = []
    variables_no_transformadas = []

    # Valor predeterminado para valores no v√°lidos
    valor_comodin = -9999.0

    for var in variables:
        if var not in df.columns:
            variables_no_encontradas.append(var)
            logger.warning(f"La columna '{var}' no se encuentra en el DataFrame.")
        else:
            try:
                # Transformar a num√©rico, valores no v√°lidos a -9999.0, y convertir a float
                df[var] = pd.to_numeric(df[var], errors='coerce').fillna(valor_comodin).astype(float)
                variables_transformadas.append(var)
                logger.info(f"Columna '{var}' transformada exitosamente a flotante.")
            except Exception as e:
                variables_no_transformadas.append(var)
                logger.error(f"Error al transformar la columna '{var}' a flotante: {e}")

    # Crear el resultado
    resultado = {
        "no_encontradas": variables_no_encontradas,
        "transformadas": variables_transformadas,
        "no_transformadas": variables_no_transformadas
    }
    logger.info(f"Resultado de la validaci√≥n y transformaci√≥n de flotantes: {resultado}")
    return resultado

# Validaci√≥n y transformaci√≥n a STRING
def validar_transformar_str(df, variables):
    """
    Valida y transforma columnas en un DataFrame a tipo str, reemplazando valores NaN por "Sin Dato".

    Args:
        df (pd.DataFrame): DataFrame a validar y transformar.
        variables (list): Lista de nombres de las columnas a validar y transformar.

    Returns:
        dict: Diccionario con las listas de variables no encontradas, transformadas exitosamente y no transformadas.
    """
    # Inicializar listas de resultados
    variables_no_encontradas = []
    variables_transformadas = []
    variables_no_transformadas = []

    # Valor predeterminado para valores NaN
    valor_comodin = "Sin Dato"

    for var in variables:
        if var not in df.columns:
            variables_no_encontradas.append(var)
            logger.warning(f"La columna '{var}' no se encuentra en el DataFrame.")
        else:
            try:
                # Convertir a str y reemplazar valores NaN
                df[var] = df[var].astype(str).fillna(valor_comodin)
                variables_transformadas.append(var)
                logger.info(f"Columna '{var}' transformada exitosamente a cadena.")
            except Exception as e:
                variables_no_transformadas.append(var)
                logger.error(f"Error al transformar la columna '{var}' a cadena: {e}")

    # Crear el resultado
    resultado = {
        "no_encontradas": variables_no_encontradas,
        "transformadas": variables_transformadas,
        "no_transformadas": variables_no_transformadas
    }
    logger.info(f"Resultado de la validaci√≥n y transformaci√≥n de cadenas: {resultado}")
    return resultado

# Cargar el archivo desde OneDrive y procesar
def cargar_base(request):
    url = "https://1drv.ms/x/c/2e6a86b505bf5110/EfTIdtA6la9EhpliXgsHGewBCCIlhCCpGCFVDgkcjHSq5A?e=kegYRr&download=1"
    tablej = 'observatorio-ino.bases_externas.programa_asma_ver_1'
    client = bigquery.Client()
    
    columnas = ['tipo_documento', 'documento', 'primer_nombre', 'segundo_nombre', 'primer_apellido', 'segundo_apellido', 'codigo_interno_paciente', 'medico_tratante', 'lugar_residencia', 'sede', 'genero', 'fecha_nacimiento', 'edad', 'rango_edad', 'eps', 'fecha_ingreso_programa', 'mes_ruta', 'estado', 'diagnostico_previo_asma', 'fecha_espirometria_inicial', 'peso_kg', 'talla_cm', 'cvf_pre_l', 'vef1pre_l', 'cvf_post_l_2', 'vef1post_l', 'vef1post_por', 'respuesta_broncodilatador_1', 'oscilometria', 'fecha_oscilometria', 'interpretacion_oscilometria_inicial', 'respuesta_broncodilatador_2', 'feno', 'fecha_feno', 'resultado_feno', 'prueba_broncoprovocacion', 'fecha_prueba_broncoprobocacion', 'interpretacion_p_broncoprovocacion', 'calidad_vida_inicio', 'interpretacion_calidad_vida', 'tai', 'interpretacion_tai', 'act', 'interpretacion_act', 'acq', 'interpretacion_acq', 'exacerbaciones_previas_ingreso_programa', 'manejo_exacerbacion_casa', 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso', 'manejo_exacerbacion_hospitalizacion_12meses_ingreso', 'manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso', 'manejo_exacerbaciones_corticosteroides_12meses_ingreso', 'paciente_sospecha_asma_alergica', 'fecha_valoracion_alergologia', 'fecha_prick_test', 'resultado_prick_test', 'primer_corticoide_inhalado', 'primer_corticoide_inhalado3', 'primer_gci_laba', 'gci_laba', 'primer_saba', 'saba', 'primer_lama', 'lama', 'uso_terapia_biologica', 'terapia_biologica', 'fecha_junta_asma_para_formulacion', 'fecha_inicio_terapia_biologica', 'alerta_seguimiento_mes_6', 'alerta_seguimiento_mes_12', 'paciente_eventos_adversos', 'fecha_ultimo_evento_adverso', 'fecha_entrega_plan_accion', 'fecha_entrega_educacion_tics_1_mes', 'fecha_seguimiento_mes_1', 'fecha_entrega_educacion_tics_2_mes', 'fecha_seguimiento_mes_2', 'fecha_entrega_educacion_tics_3_mes', 'fecha_seguimiento_mes_3', 'tai_3_meses', 'interpretacion_tai_3', 'act_3_meses', 'interpretacion_act_3', 'acq_3_meses', 'interpretacion_acq_3', 'paciente_exacerbaciones_primer_trimestre', 'manejo_exacerbacion_casa_3meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_3meses', 'manejo_exacerbacion_hospitalizacion_3meses', 'manejo_exacerbacion_hospitalizacion_uci_3meses', 'manejo_exacerbaciones_corticosteroides_3meses', 'cantidad_citas_prioritarias_fase_1', 'junta_asma_fase_1', 'fecha_real_cita_neumologia_3_meses', 'confirmacion_diagnostica', 'fecha_confirmacion_diagnostica', 'fecha_estudio_diagnostico_previo', 'soporte_prueba_diagnostico', 'paciente_inicia_rehabilitacion_pulmonar', 'modalidad_atencion_rehabilitacion_pulmonar', 'caminata_6_minutos_inicial', 'grupo_riesgo', 'fecha_valoracion_nutricion', 'requiere_seguimiento_nutricion', 'fecha_seguimiento_nutricion', 'fecha_valoracion_psicologia', 'requiere_seguimiento_psicologia', 'fecha_seguimiento_psicologia', 'fecha_entrega_educacion_tics_4mes', 'fecha_entrega_educacion_tics_5mes', 'fecha_entrega_educacion_tics_6mes', 'fecha_seguimiento_mes_6', 'tai_6_meses', 'interpretacion_tai_6', 'act_6_meses', 'interpretacion_act_6', 'acq_6_meses', 'interpretacion_acq_6', 'paciente_exacerbaciones_segundo_trimestre_6meses)', 'manejo_exacerbacion_casa_cantidad_6meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_6meses', 'manejo_exacerbacion_hospitalizacion_6meses', 'manejo_exacerbacion_hospitalizacion_uci_6meses', 'manejo_exacerbaciones_corticosteroides_6meses', 'fecha_real_cita_neumologia_6_meses', 'fecha_entrega_educacion_tics_7_mes', 'fecha_entrega_educacion_tics_8_mes', 'fecha_entrega_educacion_tics_9_mes', 'fecha_seguimiento_mes_9', 'tai_9_meses', 'interpretacion_tai_9', 'act_9_meses', 'interpretacion_act_9', 'acq_9_meses', 'interpretacion_acq_9', 'paciente_exacerbaciones_tercer_trimestre_9meses', 'manejo_exacerbacion_casa_9meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_9meses', 'manejo_exacerbacion_hospitalizacion_9meses', 'manejo_exacerbacion_hospitalizacion_uci_9meses', 'manejo_exacerbaciones_corticosteroides_9meses', 'fecha_real_cita_neumologia_9_meses', 'fecha_entrega_educacion_tics_10_mes', 'fecha_entrega_educacion_tics_11_mes', 'fecha_entrega_educacion_tics_12_mes', 'fecha_seguimiento_mes_12_fisioterapia_control', 'cantidad_valoraciones_alergologia_fase_seguimiento', 'calidad_vida_12_meses', 'interpretacion_calidad_vida_final', 'tai_12_meses', 'interpretacion_tai_12', 'act_12_meses', 'interpretacion_act_12', 'acq_12_meses', 'interpretacion_acq_12', 'paciente_exacerbaciones_cuarto_trimestre_12meses', 'manejo_exacerbacion_casa_12meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses', 'manejo_exacerbacion_hospitalizacion_12meses', 'manejo_exacerbacion_hospitalizacion_uci_12meses', 'manejo_exacerbaciones_corticosteroides_12meses', 'cantidad_citas_prioritarias_fase_2', 'junta_asma_fase_2', 'fecha_espirometria_final', 'peso_kg_2', 'talla_cm_2', 'segundo_cvf_pre_l', 'segundo_vef1pre_l', 'segundo_cvf_post_l', 'segundo_vef1post_l', 'segundo_vef1post_por', 'segundo_oscilometria', 'interpretacion_oscilometria', 'fecha_real_cita_neumologia_12_meses', 'paciente_exacerbaciones_cuarto_trimestre_mas_12meses', 'manejo_exacerbacion_casa_mas_12meses', 'manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses', 'manejo_exacerbacion_hospitalizacion_mas_12meses', 'manejo_exacerbacion_hospitalizacion_uci_mas_12meses', 'manejo_exacerbaciones_corticosteroides_mas_12meses', 'paciente_finalizo_rehabilitacion_pulmonar', 'modalidad_atencion_rehabilitacion_pulmonar_finalizar', 'caminata_6_minutos_final', 'cambios_alcanzados_c6m', 'fecha_entrega_educacion_tics_13_mes', 'fecha_entrega_educacion_tics_14_mes', 'fecha_entrega_educacion_tics_15_mes', 'fecha_real_cita_neumologia_15_meses', 'fecha_entrega_educacion_tics_16_mes', 'fecha_entrega_educacion_tics_17_mes', 'fecha_entrega_educacion_tics_18_mes', 'fecha_real_cita_neumologia_18_meses', 'fecha_seguimiento_mes_18_fisioterapia_control', 'n_entregas_educacion_tics', 'entregas_educacion_tics_completas', 'paciente_egreso_temprano', 'fecha_egreso_temprano', 'egreso', 'fecha_egreso', 'motivo_egreso', 'observaciones_gestora'] 
    types = {'tipo_documento':str, 'documento':str, 'primer_nombre':str, 'segundo_nombre':str, 'primer_apellido':str, 'segundo_apellido':str, 'codigo_interno_paciente':str, 'medico_tratante':str, 'lugar_residencia':str, 'sede':str, 'genero':str, 'fecha_nacimiento':str, 'edad':float, 'rango_edad':str, 'eps':str, 'fecha_ingreso_programa':str, 'mes_ruta':int, 'estado':str, 'diagnostico_previo_asma':str, 'fecha_espirometria_inicial':str, 'peso_kg':str, 'talla_cm':str, 'cvf_pre_l':str, 'vef1pre_l':str, 'cvf_post_l_2':str, 'vef1post_l':str, 'vef1post_por':str, 'respuesta_broncodilatador_1':str, 'oscilometria':str, 'fecha_oscilometria':str, 'interpretacion_oscilometria_inicial':str, 'respuesta_broncodilatador_2':str, 'feno':str, 'fecha_feno':str, 'resultado_feno':str, 'prueba_broncoprovocacion':str, 'fecha_prueba_broncoprobocacion':str, 'interpretacion_p_broncoprovocacion':str, 'calidad_vida_inicio':str, 'interpretacion_calidad_vida':str, 'tai':str, 'interpretacion_tai':str, 'act':str, 'interpretacion_act':str, 'acq':str, 'interpretacion_acq':str, 'exacerbaciones_previas_ingreso_programa':str, 'manejo_exacerbacion_casa':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso':str, 'manejo_exacerbacion_hospitalizacion_12meses_ingreso':str, 'manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso':str, 'manejo_exacerbaciones_corticosteroides_12meses_ingreso':str, 'paciente_sospecha_asma_alergica':str, 'fecha_valoracion_alergologia':str, 'fecha_prick_test':str, 'resultado_prick_test':str, 'primer_corticoide_inhalado':str, 'primer_corticoide_inhalado3':str, 'primer_gci_laba':str, 'gci_laba':str, 'primer_saba':str, 'saba':str, 'primer_lama':str, 'lama':str, 'uso_terapia_biologica':str, 'terapia_biologica':str, 'fecha_junta_asma_para_formulacion':str, 'fecha_inicio_terapia_biologica':str, 'alerta_seguimiento_mes_6':str, 'alerta_seguimiento_mes_12':str, 'paciente_eventos_adversos':str, 'fecha_ultimo_evento_adverso':str, 'fecha_entrega_plan_accion':str, 'fecha_entrega_educacion_tics_1_mes':str, 'fecha_seguimiento_mes_1':str, 'fecha_entrega_educacion_tics_2_mes':str, 'fecha_seguimiento_mes_2':str, 'fecha_entrega_educacion_tics_3_mes':str, 'fecha_seguimiento_mes_3':str, 'tai_3_meses':str, 'interpretacion_tai_3':str, 'act_3_meses':str, 'interpretacion_act_3':str, 'acq_3_meses':str, 'interpretacion_acq_3':str, 'paciente_exacerbaciones_primer_trimestre':str, 'manejo_exacerbacion_casa_3meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_3meses':str, 'manejo_exacerbacion_hospitalizacion_3meses':str, 'manejo_exacerbacion_hospitalizacion_uci_3meses':str, 'manejo_exacerbaciones_corticosteroides_3meses':str, 'cantidad_citas_prioritarias_fase_1':str, 'junta_asma_fase_1':str, 'fecha_real_cita_neumologia_3_meses':str, 'confirmacion_diagnostica':str, 'fecha_confirmacion_diagnostica':str, 'fecha_estudio_diagnostico_previo':str, 'soporte_prueba_diagnostico':str, 'paciente_inicia_rehabilitacion_pulmonar':str, 'modalidad_atencion_rehabilitacion_pulmonar':str, 'caminata_6_minutos_inicial':str, 'grupo_riesgo':str, 'fecha_valoracion_nutricion':str, 'requiere_seguimiento_nutricion':str, 'fecha_seguimiento_nutricion':str, 'fecha_valoracion_psicologia':str, 'requiere_seguimiento_psicologia':str, 'fecha_seguimiento_psicologia':str, 'fecha_entrega_educacion_tics_4mes':str, 'fecha_entrega_educacion_tics_5mes':str, 'fecha_entrega_educacion_tics_6mes':str, 'fecha_seguimiento_mes_6':str, 'tai_6_meses':str, 'interpretacion_tai_6':str, 'act_6_meses':str, 'interpretacion_act_6':str, 'acq_6_meses':str, 'interpretacion_acq_6':str, 'paciente_exacerbaciones_segundo_trimestre_6meses':str, 'manejo_exacerbacion_casa_cantidad_6meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_6meses':str, 'manejo_exacerbacion_hospitalizacion_6meses':str, 'manejo_exacerbacion_hospitalizacion_uci_6meses':str, 'manejo_exacerbaciones_corticosteroides_6meses':str, 'fecha_real_cita_neumologia_6_meses':str, 'fecha_entrega_educacion_tics_7_mes':str, 'fecha_entrega_educacion_tics_8_mes':str, 'fecha_entrega_educacion_tics_9_mes':str, 'fecha_seguimiento_mes_9':str, 'tai_9_meses':str, 'interpretacion_tai_9':str, 'act_9_meses':str, 'interpretacion_act_9':str, 'acq_9_meses':str, 'interpretacion_acq_9':str, 'paciente_exacerbaciones_tercer_trimestre_9meses':str, 'manejo_exacerbacion_casa_9meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_9meses':str, 'manejo_exacerbacion_hospitalizacion_9meses':str, 'manejo_exacerbacion_hospitalizacion_uci_9meses':str, 'manejo_exacerbaciones_corticosteroides_9meses':str, 'fecha_real_cita_neumologia_9_meses':str, 'fecha_entrega_educacion_tics_10_mes':str, 'fecha_entrega_educacion_tics_11_mes':str, 'fecha_entrega_educacion_tics_12_mes':str, 'fecha_seguimiento_mes_12_fisioterapia_control':str, 'cantidad_valoraciones_alergologia_fase_seguimiento':str, 'calidad_vida_12_meses':str, 'interpretacion_calidad_vida_final':str, 'tai_12_meses':str, 'interpretacion_tai_12':str, 'act_12_meses':str, 'interpretacion_act_12':str, 'acq_12_meses':str, 'interpretacion_acq_12':str, 'paciente_exacerbaciones_cuarto_trimestre_12meses':str, 'manejo_exacerbacion_casa_12meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_12meses':str, 'manejo_exacerbacion_hospitalizacion_12meses':str, 'manejo_exacerbacion_hospitalizacion_uci_12meses':str, 'manejo_exacerbaciones_corticosteroides_12meses':str, 'cantidad_citas_prioritarias_fase_2':str, 'junta_asma_fase_2':str, 'fecha_espirometria_final':str, 'peso_kg_2':str, 'talla_cm_2':str, 'segundo_cvf_pre_l':str, 'segundo_vef1pre_l':str, 'segundo_cvf_post_l':str, 'segundo_vef1post_l':str, 'segundo_vef1post_por':str, 'segundo_oscilometria':str, 'interpretacion_oscilometria':str, 'fecha_real_cita_neumologia_12_meses':str, 'paciente_exacerbaciones_cuarto_trimestre_mas_12meses':str, 'manejo_exacerbacion_casa_mas_12meses':str, 'manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses':str, 'manejo_exacerbacion_hospitalizacion_mas_12meses':str, 'manejo_exacerbacion_hospitalizacion_uci_mas_12meses':str, 'manejo_exacerbaciones_corticosteroides_mas_12meses':str, 'paciente_finalizo_rehabilitacion_pulmonar':str, 'modalidad_atencion_rehabilitacion_pulmonar_finalizar':str, 'caminata_6_minutos_final':str, 'cambios_alcanzados_c6m':str, 'fecha_entrega_educacion_tics_13_mes':str, 'fecha_entrega_educacion_tics_14_mes':str, 'fecha_entrega_educacion_tics_15_mes':str, 'fecha_real_cita_neumologia_15_meses':str, 'fecha_entrega_educacion_tics_16_mes':str, 'fecha_entrega_educacion_tics_17_mes':str, 'fecha_entrega_educacion_tics_18_mes':str, 'fecha_real_cita_neumologia_18_meses':str, 'fecha_seguimiento_mes_18_fisioterapia_control':str, 'n_entregas_educacion_tics':str, 'entregas_educacion_tics_completas':str, 'paciente_egreso_temprano':str, 'fecha_egreso_temprano':str, 'egreso':str, 'fecha_egreso':str, 'motivo_egreso':str, 'observaciones_gestora':str}

    variables_datetime = ['fecha_nacimiento','fecha_ingreso_programa','fecha_seguimiento_nutricion','fecha_seguimiento_psicologia','fecha_espirometria_inicial','fecha_oscilometria','fecha_feno','fecha_prueba_broncoprobocacion','fecha_valoracion_alergologia','fecha_prick_test','fecha_junta_asma_para_formulacion','fecha_inicio_terapia_biologica','fecha_ultimo_evento_adverso','fecha_entrega_plan_accion','fecha_entrega_educacion_tics_1_mes','fecha_seguimiento_mes_1','fecha_entrega_educacion_tics_2_mes','fecha_seguimiento_mes_2','fecha_entrega_educacion_tics_3_mes','fecha_seguimiento_mes_3','fecha_real_cita_neumologia_3_meses','fecha_confirmacion_diagnostica','fecha_estudio_diagnostico_previo','fecha_valoracion_nutricion','fecha_valoracion_psicologia','fecha_entrega_educacion_tics_4mes','fecha_entrega_educacion_tics_5mes','fecha_entrega_educacion_tics_6mes','fecha_seguimiento_mes_6','fecha_real_cita_neumologia_6_meses','fecha_entrega_educacion_tics_7_mes','fecha_entrega_educacion_tics_8_mes','fecha_entrega_educacion_tics_9_mes','fecha_seguimiento_mes_9','fecha_real_cita_neumologia_9_meses','fecha_entrega_educacion_tics_10_mes','fecha_entrega_educacion_tics_11_mes','fecha_entrega_educacion_tics_12_mes','fecha_seguimiento_mes_12_fisioterapia_control','fecha_espirometria_final','fecha_real_cita_neumologia_12_meses','fecha_entrega_educacion_tics_13_mes','fecha_entrega_educacion_tics_14_mes','fecha_entrega_educacion_tics_15_mes','fecha_real_cita_neumologia_15_meses','fecha_entrega_educacion_tics_16_mes','fecha_entrega_educacion_tics_17_mes','fecha_entrega_educacion_tics_18_mes','fecha_real_cita_neumologia_18_meses','fecha_seguimiento_mes_18_fisioterapia_control','fecha_egreso_temprano','fecha_egreso']
    variables_int = ['edad','mes_ruta','peso_kg','talla_cm','calidad_vida_inicio','tai','act','manejo_exacerbacion_casa','manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso','manejo_exacerbacion_hospitalizacion_12meses_ingreso','manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso','alerta_seguimiento_mes_6','alerta_seguimiento_mes_12','tai_3_meses','act_3_meses','manejo_exacerbacion_casa_3meses','manejo_exacerbacion_urgencias_cita_prioritaria_3meses','manejo_exacerbacion_hospitalizacion_3meses','manejo_exacerbacion_hospitalizacion_uci_3meses','cantidad_citas_prioritarias_fase_1','caminata_6_minutos_inicial','tai_6_meses','act_6_meses','manejo_exacerbacion_casa_cantidad_6meses','manejo_exacerbacion_urgencias_cita_prioritaria_6meses','manejo_exacerbacion_hospitalizacion_6meses','manejo_exacerbacion_hospitalizacion_uci_6meses','tai_9_meses','act_9_meses','manejo_exacerbacion_casa_9meses','manejo_exacerbacion_urgencias_cita_prioritaria_9meses','manejo_exacerbacion_hospitalizacion_9meses','manejo_exacerbacion_hospitalizacion_uci_9meses','cantidad_valoraciones_alergologia_fase_seguimiento','calidad_vida_12_meses','tai_12_meses','act_12_meses','manejo_exacerbacion_casa_12meses','manejo_exacerbacion_urgencias_cita_prioritaria_12meses','manejo_exacerbacion_hospitalizacion_12meses','manejo_exacerbacion_hospitalizacion_uci_12meses','cantidad_citas_prioritarias_fase_2','peso_kg_2','talla_cm_2','manejo_exacerbacion_casa_mas_12meses','manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses','manejo_exacerbacion_hospitalizacion_mas_12meses','manejo_exacerbacion_hospitalizacion_uci_mas_12meses','caminata_6_minutos_final','cambios_alcanzados_c6m','n_entregas_educacion_tics']
    variables_float = ['cvf_pre_l','vef1pre_l','cvf_post_l_2','vef1post_l','acq','acq_3_meses','acq_6_meses','acq_9_meses','acq_12_meses','segundo_cvf_pre_l','segundo_vef1pre_l','segundo_cvf_post_l','segundo_vef1post_l','vef1post_por','resultado_feno','segundo_vef1post_por']
    variables_str = ['tipo_documento','documento','primer_nombre','segundo_nombre','primer_apellido','segundo_apellido','codigo_interno_paciente','medico_tratante','lugar_residencia','sede','genero','rango_edad','eps','estado','diagnostico_previo_asma','respuesta_broncodilatador_1','oscilometria','interpretacion_oscilometria_inicial','respuesta_broncodilatador_2','feno','prueba_broncoprovocacion','interpretacion_p_broncoprovocacion','interpretacion_calidad_vida','interpretacion_tai','interpretacion_act','interpretacion_acq','exacerbaciones_previas_ingreso_programa','manejo_exacerbaciones_corticosteroides_12meses_ingreso','paciente_sospecha_asma_alergica','resultado_prick_test','primer_corticoide_inhalado','primer_corticoide_inhalado3','primer_gci_laba','gci_laba','primer_saba','saba','primer_lama','lama','uso_terapia_biologica','terapia_biologica','paciente_eventos_adversos','interpretacion_tai_3','interpretacion_act_3','interpretacion_acq_3','paciente_exacerbaciones_primer_trimestre','manejo_exacerbaciones_corticosteroides_3meses','junta_asma_fase_1','confirmacion_diagnostica','soporte_prueba_diagnostico','paciente_inicia_rehabilitacion_pulmonar','modalidad_atencion_rehabilitacion_pulmonar','grupo_riesgo','requiere_seguimiento_nutricion','requiere_seguimiento_psicologia','interpretacion_tai_6','interpretacion_act_6','interpretacion_acq_6','paciente_exacerbaciones_segundo_trimestre_6meses)','manejo_exacerbaciones_corticosteroides_6meses','interpretacion_tai_9','interpretacion_act_9','interpretacion_acq_9','paciente_exacerbaciones_tercer_trimestre_9meses','manejo_exacerbaciones_corticosteroides_9meses','interpretacion_calidad_vida_final','interpretacion_tai_12','interpretacion_act_12','interpretacion_acq_12','paciente_exacerbaciones_cuarto_trimestre_12meses','manejo_exacerbaciones_corticosteroides_12meses','junta_asma_fase_2','segundo_oscilometria','interpretacion_oscilometria','paciente_exacerbaciones_cuarto_trimestre_mas_12meses','manejo_exacerbaciones_corticosteroides_mas_12meses','paciente_finalizo_rehabilitacion_pulmonar','modalidad_atencion_rehabilitacion_pulmonar_finalizar','entregas_educacion_tics_completas','paciente_egreso_temprano','egreso','motivo_egreso','observaciones_gestora']

    try:
        logger.info(f"Descargando archivo desde {url}")
        response = requests.get(url)
        response.raise_for_status()

        file_bytes = BytesIO(response.content)
        logger.info("Archivo descargado exitosamente.")
        
        df = pd.read_excel(file_bytes, sheet_name="BASE ASMA", header=6, names=columnas, dtype=types)
        logger.info("Archivo cargado en DataFrame.")

        validar_transformar_datetime(df, variables_datetime)
        logger.info("Transformaciones de columnas DATETIME completadas.")

        validar_transformar_int(df, variables_int)
        logger.info("Transformaciones de columnas INTEGER completadas.")

        validar_transformar_float(df, variables_float)
        logger.info("Transformaciones de columnas FLOAT completadas.")

        validar_transformar_str(df, variables_str)
        logger.info("Transformaciones de columnas STRING completadas.")
        
        # Cargar en BigQuery
        job_config = bigquery.LoadJobConfig(
            schema = [bigquery.SchemaField('tipo_documento', 'STRING', mode='NULLABLE'),bigquery.SchemaField('documento', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_nombre', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_nombre', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_apellido', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_apellido', 'STRING', mode='NULLABLE'),bigquery.SchemaField('codigo_interno_paciente', 'STRING', mode='NULLABLE'),bigquery.SchemaField('medico_tratante', 'STRING', mode='NULLABLE'),bigquery.SchemaField('lugar_residencia', 'STRING', mode='NULLABLE'),bigquery.SchemaField('sede', 'STRING', mode='NULLABLE'),bigquery.SchemaField('genero', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_nacimiento', 'STRING', mode='NULLABLE'),bigquery.SchemaField('edad', 'FLOAT', mode='NULLABLE'),bigquery.SchemaField('rango_edad', 'STRING', mode='NULLABLE'),bigquery.SchemaField('eps', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_ingreso_programa', 'DATE', mode='NULLABLE'),bigquery.SchemaField('mes_ruta', 'INTEGER', mode='NULLABLE'),bigquery.SchemaField('estado', 'STRING', mode='NULLABLE'),bigquery.SchemaField('diagnostico_previo_asma', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_espirometria_inicial', 'STRING', mode='NULLABLE'),bigquery.SchemaField('peso_kg', 'STRING', mode='NULLABLE'),bigquery.SchemaField('talla_cm', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cvf_pre_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('vef1pre_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cvf_post_l_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('vef1post_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('vef1post_por', 'STRING', mode='NULLABLE'),bigquery.SchemaField('respuesta_broncodilatador_1', 'STRING', mode='NULLABLE'),bigquery.SchemaField('oscilometria', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_oscilometria', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_oscilometria_inicial', 'STRING', mode='NULLABLE'),bigquery.SchemaField('respuesta_broncodilatador_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('feno', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_feno', 'STRING', mode='NULLABLE'),bigquery.SchemaField('resultado_feno', 'STRING', mode='NULLABLE'),bigquery.SchemaField('prueba_broncoprovocacion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_prueba_broncoprobocacion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_p_broncoprovocacion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('calidad_vida_inicio', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_calidad_vida', 'STRING', mode='NULLABLE'),bigquery.SchemaField('tai', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_tai', 'STRING', mode='NULLABLE'),bigquery.SchemaField('act', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_act', 'STRING', mode='NULLABLE'),bigquery.SchemaField('acq', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_acq', 'STRING', mode='NULLABLE'),bigquery.SchemaField('exacerbaciones_previas_ingreso_programa', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_12meses_ingreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_12meses_ingreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_12meses_ingreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_12meses_ingreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_sospecha_asma_alergica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_valoracion_alergologia', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_prick_test', 'STRING', mode='NULLABLE'),bigquery.SchemaField('resultado_prick_test', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_corticoide_inhalado', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_corticoide_inhalado3', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_gci_laba', 'STRING', mode='NULLABLE'),bigquery.SchemaField('gci_laba', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_saba', 'STRING', mode='NULLABLE'),bigquery.SchemaField('saba', 'STRING', mode='NULLABLE'),bigquery.SchemaField('primer_lama', 'STRING', mode='NULLABLE'),bigquery.SchemaField('lama', 'STRING', mode='NULLABLE'),bigquery.SchemaField('uso_terapia_biologica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('terapia_biologica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_junta_asma_para_formulacion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_inicio_terapia_biologica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('alerta_seguimiento_mes_6', 'STRING', mode='NULLABLE'),bigquery.SchemaField('alerta_seguimiento_mes_12', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_eventos_adversos', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_ultimo_evento_adverso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_plan_accion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_1_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_1', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_2_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_3_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_3', 'STRING', mode='NULLABLE'),bigquery.SchemaField('tai_3_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_tai_3', 'STRING', mode='NULLABLE'),bigquery.SchemaField('act_3_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_act_3', 'STRING', mode='NULLABLE'),bigquery.SchemaField('acq_3_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_acq_3', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_exacerbaciones_primer_trimestre', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa_3meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_3meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_3meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_3meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_3meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cantidad_citas_prioritarias_fase_1', 'STRING', mode='NULLABLE'),bigquery.SchemaField('junta_asma_fase_1', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_3_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('confirmacion_diagnostica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_confirmacion_diagnostica', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_estudio_diagnostico_previo', 'STRING', mode='NULLABLE'),bigquery.SchemaField('soporte_prueba_diagnostico', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_inicia_rehabilitacion_pulmonar', 'STRING', mode='NULLABLE'),bigquery.SchemaField('modalidad_atencion_rehabilitacion_pulmonar', 'STRING', mode='NULLABLE'),bigquery.SchemaField('caminata_6_minutos_inicial', 'STRING', mode='NULLABLE'),bigquery.SchemaField('grupo_riesgo', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_valoracion_nutricion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('requiere_seguimiento_nutricion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_nutricion', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_valoracion_psicologia', 'STRING', mode='NULLABLE'),bigquery.SchemaField('requiere_seguimiento_psicologia', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_psicologia', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_4mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_5mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_6mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_6', 'STRING', mode='NULLABLE'),bigquery.SchemaField('tai_6_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_tai_6', 'STRING', mode='NULLABLE'),bigquery.SchemaField('act_6_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_act_6', 'STRING', mode='NULLABLE'),bigquery.SchemaField('acq_6_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_acq_6', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_exacerbaciones_segundo_trimestre_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa_cantidad_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_6meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_6_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_7_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_8_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_9_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_9', 'STRING', mode='NULLABLE'),bigquery.SchemaField('tai_9_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_tai_9', 'STRING', mode='NULLABLE'),bigquery.SchemaField('act_9_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_act_9', 'STRING', mode='NULLABLE'),bigquery.SchemaField('acq_9_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_acq_9', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_exacerbaciones_tercer_trimestre_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_9meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_9_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_10_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_11_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_12_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_12_fisioterapia_control', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cantidad_valoraciones_alergologia_fase_seguimiento', 'STRING', mode='NULLABLE'),bigquery.SchemaField('calidad_vida_12_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_calidad_vida_final', 'STRING', mode='NULLABLE'),bigquery.SchemaField('tai_12_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_tai_12', 'STRING', mode='NULLABLE'),bigquery.SchemaField('act_12_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_act_12', 'STRING', mode='NULLABLE'),bigquery.SchemaField('acq_12_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_acq_12', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_exacerbaciones_cuarto_trimestre_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cantidad_citas_prioritarias_fase_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('junta_asma_fase_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_espirometria_final', 'STRING', mode='NULLABLE'),bigquery.SchemaField('peso_kg_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('talla_cm_2', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_cvf_pre_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_vef1pre_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_cvf_post_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_vef1post_l', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_vef1post_por', 'STRING', mode='NULLABLE'),bigquery.SchemaField('segundo_oscilometria', 'STRING', mode='NULLABLE'),bigquery.SchemaField('interpretacion_oscilometria', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_12_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_exacerbaciones_cuarto_trimestre_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_casa_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_urgencias_cita_prioritaria_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbacion_hospitalizacion_uci_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('manejo_exacerbaciones_corticosteroides_mas_12meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_finalizo_rehabilitacion_pulmonar', 'STRING', mode='NULLABLE'),bigquery.SchemaField('modalidad_atencion_rehabilitacion_pulmonar_finalizar', 'STRING', mode='NULLABLE'),bigquery.SchemaField('caminata_6_minutos_final', 'STRING', mode='NULLABLE'),bigquery.SchemaField('cambios_alcanzados_c6m', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_13_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_14_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_15_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_15_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_16_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_17_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_entrega_educacion_tics_18_mes', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_real_cita_neumologia_18_meses', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_seguimiento_mes_18_fisioterapia_control', 'STRING', mode='NULLABLE'),bigquery.SchemaField('n_entregas_educacion_tics', 'STRING', mode='NULLABLE'),bigquery.SchemaField('entregas_educacion_tics_completas', 'STRING', mode='NULLABLE'),bigquery.SchemaField('paciente_egreso_temprano', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_egreso_temprano', 'STRING', mode='NULLABLE'),bigquery.SchemaField('egreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('fecha_egreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('motivo_egreso', 'STRING', mode='NULLABLE'),bigquery.SchemaField('observaciones_gestora', 'STRING', mode='NULLABLE')]
            write_disposition='WRITE_TRUNCATE'
        )
        job = client.load_table_from_dataframe(df, tablej, job_config=job_config)
        job.result()
        logger.info("Datos cargados en BigQuery correctamente.")

    except requests.exceptions.RequestException as e:
        logger.error(f"Error al descargar el archivo: {e}")
        return jsonify({"error": f"Error al descargar el archivo: {e}"}), 500
    except Exception as e:
        logger.error(f"Error general: {e}")
        return jsonify({"error": f"Error general: {e}"}), 500

    msg_enviar = request.form.get('msg_enviar')
    if not msg_enviar:
        logger.warning("Par√°metro 'msg_enviar' faltante.")
        return jsonify({"error": "Faltan los par√°metros msg_enviar"}), 400

    logger.info("Proceso completado exitosamente.")
    return jsonify({"message": "Archivo subido exitosamente"}), 200

# Flask app
app = Flask(__name__)
@app.route('/', methods=['POST'])
def handle_request():
    return cargar_base(request)




